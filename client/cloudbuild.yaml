steps:
  # Get the secrets
  - name: "gcr.io/cloud-builders/gsutil"
    entrypoint: bash
    args:
      [
        "-c",
        'for secret in $(gcloud secrets list --filter=REACT --format=''value(NAME)''); do echo NEXT_PUBLIC_$secret="$(gcloud secrets versions access --secret=$secret latest)" >> .env; done',
      ]
    dir: client

  # Build the front image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_COMPONENT}:$SHORT_SHA",
        "-t",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_COMPONENT}:latest",
        "--build-arg",
        "APP_SERVER_URL=${_APP_SERVER_URL}",
        "--build-arg",
        "APP_ENV=${_APP_ENV}",
        "--build-arg",
        "APP_SITE_URL=${_APP_SITE_URL}",
        "-f",
        "./client/Dockerfile",
        ".",
      ]

  # Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_COMPONENT}:$SHORT_SHA"]

  # Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_COMPONENT}-${_ENV}",
        "--project",
        "$PROJECT_ID",
        "--region",
        "${_REGION}",
        "--platform",
        "managed",
        "--image",
        "${_REGISTRY_URL}/$PROJECT_ID/${_REGISTRY}/${_COMPONENT}:$SHORT_SHA",
        "--port",
        "3000",
        "--memory",
        "1G",
        "--allow-unauthenticated",
      ]

options:
  dynamicSubstitutions: true
  machineType: "E2_HIGHCPU_32"

substitutions:
  _COMPONENT: frontend
  _REGION: europe-west1
  _REGISTRY: "registry-${_ENV}"
  _REGISTRY_URL: "${_REGION}-docker.pkg.dev"

timeout: 1200s
