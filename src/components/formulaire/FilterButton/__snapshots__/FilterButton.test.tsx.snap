// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterButton snapshot test suite should render not selected 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#FFFFFF",
      "borderRadius": 12,
      "borderWidth": 2,
      "display": "flex",
      "elevation": 6,
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 14,
      "paddingLeft": 14,
      "paddingRight": 14,
      "paddingTop": 14,
      "shadowColor": "#212121",
      "shadowOffset": {
        "height": 1,
        "width": 1,
      },
      "shadowOpacity": 0.16,
      "shadowRadius": 8,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        [
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "marginRight": 8,
          },
        ]
      }
    >
      <Text
        isRTL={false}
        isSelected={false}
        selectable={true}
        style={
          [
            {
              "color": "#212121",
              "fontFamily": "circularBold",
              "fontSize": 16,
              "lineHeight": 20,
              "textAlign": "left",
            },
          ]
        }
      >
        filters.Test choice
      </Text>
    </View>
    <View
      style={
        [
          {
            "flexBasis": "auto",
            "flexGrow": 0,
          },
        ]
      }
    >
      <View
        selected={false}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#5E5E5E",
              "borderRadius": 12,
              "borderWidth": 1,
              "height": 24,
              "justifyContent": "center",
              "width": 24,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`FilterButton snapshot test suite should render with detail 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#DAE0FB",
      "borderColor": "#0421B1",
      "borderRadius": 12,
      "borderWidth": 2,
      "display": "flex",
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 14,
      "paddingLeft": 14,
      "paddingRight": 14,
      "paddingTop": 14,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        [
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "marginRight": 8,
          },
        ]
      }
    >
      <Text
        isRTL={false}
        isSelected={true}
        selectable={true}
        style={
          [
            {
              "color": "#0421B1",
              "fontFamily": "circularBold",
              "fontSize": 16,
              "lineHeight": 20,
              "textAlign": "left",
            },
          ]
        }
      >
        filters.Test choice
        <Text
          isRTL={false}
          isSelected={true}
          selectable={true}
          style={
            [
              {
                "color": "#0421B1",
                "fontFamily": "circularBold",
                "fontSize": 16,
                "lineHeight": 20,
                "textAlign": "left",
              },
            ]
          }
        >
           
          (
          First detail/Second detail
          )
        </Text>
      </Text>
    </View>
    <View
      style={
        [
          {
            "flexBasis": "auto",
            "flexGrow": 0,
          },
        ]
      }
    >
      <View
        selected={true}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#0421B1",
              "borderColor": "transparent",
              "borderRadius": 12,
              "borderWidth": 1,
              "height": 24,
              "justifyContent": "center",
              "width": 24,
            },
          ]
        }
      >
        <View
          collapsable={false}
          style={
            {
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            fill="#FFFFFF"
            focusable={false}
            height={16}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={16}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4294967295,
                  "type": 0,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGGroup>
                <RNSVGGroup>
                  <RNSVGRect
                    height="24"
                    opacity={0}
                    width="24"
                    x="0"
                    y="0"
                  />
                  <RNSVGPath
                    d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`FilterButton snapshot test suite should render without bug 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#DAE0FB",
      "borderColor": "#0421B1",
      "borderRadius": 12,
      "borderWidth": 2,
      "display": "flex",
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 14,
      "paddingLeft": 14,
      "paddingRight": 14,
      "paddingTop": 14,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        [
          {
            "flexBasis": 0,
            "flexGrow": 1,
            "marginRight": 8,
          },
        ]
      }
    >
      <Text
        isRTL={false}
        isSelected={true}
        selectable={true}
        style={
          [
            {
              "color": "#0421B1",
              "fontFamily": "circularBold",
              "fontSize": 16,
              "lineHeight": 20,
              "textAlign": "left",
            },
          ]
        }
      >
        filters.Test choice
      </Text>
    </View>
    <View
      style={
        [
          {
            "flexBasis": "auto",
            "flexGrow": 0,
          },
        ]
      }
    >
      <View
        selected={true}
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#0421B1",
              "borderColor": "transparent",
              "borderRadius": 12,
              "borderWidth": 1,
              "height": 24,
              "justifyContent": "center",
              "width": 24,
            },
          ]
        }
      >
        <View
          collapsable={false}
          style={
            {
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="16"
            bbWidth="16"
            fill="#FFFFFF"
            focusable={false}
            height={16}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            vbHeight={24}
            vbWidth={24}
            width={16}
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4294967295,
                  "type": 0,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGGroup>
                <RNSVGGroup>
                  <RNSVGRect
                    height="24"
                    opacity={0}
                    width="24"
                    x="0"
                    y="0"
                  />
                  <RNSVGPath
                    d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</View>
`;
