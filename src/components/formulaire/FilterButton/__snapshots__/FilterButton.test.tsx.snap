// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterButton snapshot test suite should render not selected 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#DDDDDD",
      "borderWidth": 1,
      "display": "flex",
      "elevation": 2,
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 16,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 16,
      "shadowColor": "#000012",
      "shadowOffset": {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.16,
      "shadowRadius": 6,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        {
          "flexBasis": 0,
          "flexGrow": 1,
          "marginRight": 8,
        }
      }
    >
      <Text
        isRTL={false}
        isSelected={false}
        selectable={true}
        style={
          {
            "color": "#161616",
            "fontFamily": "circularBold",
            "fontSize": 16,
            "lineHeight": 20,
            "paddingVertical": 4,
            "textAlign": "left",
          }
        }
      >
        filters.Test choice
      </Text>
    </View>
    <View
      style={
        {
          "flexBasis": "auto",
          "flexGrow": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="24"
          bbWidth="24"
          fill="#161616"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4279637526,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGRect
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  height="24"
                  opacity={0}
                  width="24"
                  x="0"
                  y="0"
                />
                <RNSVGPath
                  d="M12 22a10 10 0 1 1 10-10 10 10 0 0 1-10 10zm0-18a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`FilterButton snapshot test suite should render with detail 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#E3E3FD",
      "borderColor": "#000091",
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 16,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 16,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        {
          "flexBasis": 0,
          "flexGrow": 1,
          "marginRight": 8,
        }
      }
    >
      <Text
        isRTL={false}
        isSelected={true}
        selectable={true}
        style={
          {
            "color": "#000091",
            "fontFamily": "circularBold",
            "fontSize": 16,
            "lineHeight": 20,
            "paddingVertical": 4,
            "textAlign": "left",
          }
        }
      >
        filters.Test choice
        <Text
          isRTL={false}
          isSelected={true}
          selectable={true}
          style={
            {
              "color": "#000091",
              "fontFamily": "circularBold",
              "fontSize": 16,
              "lineHeight": 20,
              "paddingVertical": 4,
              "textAlign": "left",
            }
          }
        >
           
          (
          First detail/Second detail
          )
        </Text>
      </Text>
    </View>
    <View
      style={
        {
          "flexBasis": "auto",
          "flexGrow": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="24"
          bbWidth="24"
          fill="#000091"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190225,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGRect
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  height="24"
                  opacity={0}
                  width="24"
                  x="0"
                  y="0"
                />
                <RNSVGPath
                  d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                />
                <RNSVGPath
                  d="M12 7a5 5 0 1 0 5 5 5 5 0 0 0-5-5z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;

exports[`FilterButton snapshot test suite should render without bug 1`] = `
<View
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#E3E3FD",
      "borderColor": "#000091",
      "borderWidth": 1,
      "display": "flex",
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "space-between",
      "marginBottom": 24,
      "opacity": 1,
      "paddingBottom": 16,
      "paddingLeft": 16,
      "paddingRight": 16,
      "paddingTop": 16,
    }
  }
  testID="test-filter-Test choice"
>
  <View
    RTLBehaviour={true}
    animatedStyle={
      {
        "value": {},
      }
    }
    collapsable={false}
    horizontalAlign="flex-start"
    style={
      {
        "alignItems": "center",
        "flexBasis": "auto",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "flex-start",
      }
    }
    verticalAlign="center"
  >
    <View
      style={
        {
          "flexBasis": 0,
          "flexGrow": 1,
          "marginRight": 8,
        }
      }
    >
      <Text
        isRTL={false}
        isSelected={true}
        selectable={true}
        style={
          {
            "color": "#000091",
            "fontFamily": "circularBold",
            "fontSize": 16,
            "lineHeight": 20,
            "paddingVertical": 4,
            "textAlign": "left",
          }
        }
      >
        filters.Test choice
      </Text>
    </View>
    <View
      style={
        {
          "flexBasis": "auto",
          "flexGrow": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          {
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="24"
          bbWidth="24"
          fill="#000091"
          focusable={false}
          height={24}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
          width={24}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190225,
                "type": 0,
              }
            }
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
              >
                <RNSVGRect
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  height="24"
                  opacity={0}
                  width="24"
                  x="0"
                  y="0"
                />
                <RNSVGPath
                  d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                />
                <RNSVGPath
                  d="M12 7a5 5 0 1 0 5 5 5 5 0 0 0-5-5z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</View>
`;
